# This is a basic workflow to help you get started with Actions

name: CI

# Run every hour
on:
  push:
    branches:
      - feature/*
  schedule:
    - cron: 0 * * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: --snapshot --skip-publish --rm-dist
      - uses: FedericoCarboni/setup-ffmpeg@v1
        with:
          # Not strictly necessary, but it may prevent rate limit
          # errors especially on GitHub-hosted macos machines.
          token: ${{ secrets.GITHUB_TOKEN }}
        id: setup-ffmpeg

      - name: Install tsvUtils
        run: |
          curl -L https://github.com/eBay/tsv-utils/releases/download/v2.1.2/tsv-utils-v2.1.2_linux-x86_64_ldc2.tar.gz | tar xz
          sudo chmod -R +x tsv-utils-v2.1.2_linux-x86_64_ldc2/bin
          sudo mv -v tsv-utils-v2.1.2_linux-x86_64_ldc2/bin/* /usr/bin/

      - name: Cache Unsplash
        id: cache-unsplash
        uses: actions/cache@v2
        with:
          path: photos.tsv000
          key: ${{ runner.os }}-photos-dataset

      - name: Download Unsplash dataset
        if: steps.cache-unsplash.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install fastjar
          curl -L -O https://unsplash.com/data/lite/latest
          jar xvf latest

      - name: Build
        id: build
        env:
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
        run: |
          chmod -R +x ./scripts/
          ./scripts/build.sh

      - name: Upload assets
        uses: actions/upload-artifact@v2
        with:
          name: frame
          path: dist/*.mp4

      - uses: ncipollo/release-action@v1
        id: xrelease
        with:
          allowUpdates: true
          bodyFile: release.md
          tag: ${{ steps.build.outputs.version }}
          artifacts: "dist/*.mp4"
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
